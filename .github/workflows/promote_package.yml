name: Promote Python Package

on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Package version to promote (e.g., 0.0.1)'
        required: true
        type: string

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'cs-uday-staginh'
  CLOUDSMITH_PRODUCTION_REPO: 'cs-uday-prod'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Tag package as ready-for-production
        run: |
          PACKAGE_VERSION="${{ github.event.client_payload.package_version }}"
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz"
          PACKAGE_ID=$(cloudsmith list ${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_STAGING_REPO} --query "$PACKAGE_QUERY" --output json | jq -r '.[0].identifier')
          echo "Found package ID: $PACKAGE_ID"
          
          # Add tag
          cloudsmith tags add ${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_STAGING_REPO}/$PACKAGE_ID ready-for-production

      - name: Promote tagged packages to production
        run: |
          PACKAGE_QUERY="tag:ready-for-production"
          echo "Searching for packages with tag $PACKAGE_QUERY ..."
          cloudsmith mv ${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_STAGING_REPO} ${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_PRODUCTION_REPO} --query "$PACKAGE_QUERY"
